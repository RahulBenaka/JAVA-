Quick Sort - Problem Statement
Send Feedback
Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.


Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
1 5 2 7 3
Sample Output 2 :
1 2 3 5 7 



public class Solution {
    
    public static int partitionFun(int[] a, int si, int ei){
        int pivot = a[si];
        int count = 0;
        
        for(int j=si+1; j<=ei; j++){
            if(pivot>a[j]){
                count++;
            }
        }
        
        int temp = a[si+count];
        a[si+count] = pivot;
        a[si] = temp;
        
        int x = si;
    	int y = ei;
        
        while(x<y){
            if(a[x]<pivot){
                x++;
            } 
            else if(a[y]>=pivot){ 
                y--;
            }
    		else {
                swap(a[x], a[y]);
                temp = a[x];
                a[x] = a[y];
                a[y] = temp;
                x++; y--;
            }
        }
        
        return (si+count);
    }
    
    public static void quickSortFun(int[] a, int si, int ei){
        if(si<ei){     
        	int i = partitionFun(a, si, ei);
        	quickSortFun(a, si, i-1);
        	quickSortFun(a, i+1, ei);
        }
       
    }
	
	public static void quickSort(int[] input) {
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * No need to print or return the output.
		 * Taking input and printing output is handled automatically.
		 */
        
        quickSortFun(input, 0, input.length-1);
		
	}
	
}